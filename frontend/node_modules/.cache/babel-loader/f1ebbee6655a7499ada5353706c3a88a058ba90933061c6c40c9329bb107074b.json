{"ast":null,"code":"var _jsxFileName = \"/Users/yuyangzhang/Desktop/llm-sql/frontend/src/components/ChatBot.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { PrismLight as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport sql from \"react-syntax-highlighter/dist/esm/languages/prism/sql\";\nimport { materialDark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport { format } from \"sql-formatter\";\nimport Editor from \"react-simple-code-editor\";\nimport { highlight, languages } from \"prismjs\";\nimport \"prismjs/components/prism-sql\";\nimport \"prismjs/themes/prism.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSyntaxHighlighter.registerLanguage(\"sql\", sql);\nconst ChatBot = ({\n  setChartData,\n  setTableData,\n  addOldData\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [tableData, setTableDataState] = useState([]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n\n    // Add user message\n    const userMessage = {\n      id: Date.now(),\n      text: input,\n      isUser: true\n    };\n\n    // Simulate bot response with formatted SQL\n    const botMessage = {\n      id: Date.now() + 1,\n      text: format(`SELECT id, name, email, created_at FROM users WHERE name = '${input}' ORDER BY created_at DESC LIMIT 10;`),\n      isUser: false,\n      isEditable: true\n    };\n    setMessages([...messages, userMessage, botMessage]);\n    setInput(\"\");\n  };\n  const handleEdit = (id, newText) => {\n    setMessages(messages.map(message => message.id === id ? {\n      ...message,\n      text: newText\n    } : message));\n  };\n  const handleSend = sql => {\n    // Simulate sending the SQL to the backend server and receiving data\n    setTimeout(() => {\n      const fakeTableData = [{\n        id: 1,\n        name: \"John Doe\",\n        email: \"john.doe@example.com\",\n        created_at: \"2023-01-01T10:00:00Z\"\n      }, {\n        id: 2,\n        name: \"Jane Smith\",\n        email: \"jane.smith@example.com\",\n        created_at: \"2023-01-02T11:30:00Z\"\n      }, {\n        id: 3,\n        name: \"Alice Johnson\",\n        email: \"alice.johnson@example.com\",\n        created_at: \"2023-01-03T12:45:00Z\"\n      }, {\n        id: 4,\n        name: \"Bob Brown\",\n        email: \"bob.brown@example.com\",\n        created_at: \"2023-01-04T14:00:00Z\"\n      }, {\n        id: 5,\n        name: \"Charlie Davis\",\n        email: \"charlie.davis@example.com\",\n        created_at: \"2023-01-05T15:15:00Z\"\n      }, {\n        id: 6,\n        name: \"Diana Evans\",\n        email: \"diana.evans@example.com\",\n        created_at: \"2023-01-06T16:30:00Z\"\n      }];\n      const labels = fakeTableData.map(row => row.name);\n      const chartData = {\n        labels,\n        datasets: [{\n          label: \"User Data\",\n          data: fakeTableData.map(row => row.id),\n          borderColor: \"rgb(75, 192, 192)\",\n          tension: 0.1\n        }]\n      };\n      addOldData(chartData, fakeTableData, sql);\n      setTableDataState(fakeTableData);\n      setTableData(fakeTableData);\n      setChartData(chartData, sql);\n    }, 1000); // Simulate network delay\n\n    // Original handleSend function\n    /*\n    fetch(\"/api/execute-sql\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ sql }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Success:\", data);\n        // Update table data\n        addOldData(chartData, data.tableData, sql);\n        setTableData(data.tableData);\n         // Update chart data\n        const labels = data.tableData.map((row: any) => row.name);\n        const chartData = {\n          labels,\n          datasets: [\n            {\n              label: \"User Data\",\n              data: data.tableData.map((row: any) => row.id),\n              borderColor: \"rgb(75, 192, 192)\",\n              tension: 0.1,\n            },\n          ],\n        };\n        setChartData(chartData, sql);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n    */\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full bg-white rounded-lg shadow-lg overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-blue-500 text-white p-4 text-center font-bold text-lg\",\n      children: \"ChatBot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto p-4 bg-gray-50\",\n      children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-500 mt-4\",\n        children: \"Start a conversation...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this) : messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-4 ${message.isUser ? \"text-right\" : \"text-left\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `inline-block max-w-[80%] p-3 rounded-lg ${message.isUser ? \"bg-blue-500 text-white rounded-br-none\" : \"bg-gray-200 text-gray-800 rounded-bl-none\"}`,\n          children: message.isUser ? message.text : message.isEditable ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: [/*#__PURE__*/_jsxDEV(Editor, {\n              value: message.text,\n              onValueChange: newText => handleEdit(message.id, newText),\n              highlight: code => highlight(code, languages.sql, \"sql\"),\n              padding: 10,\n              style: {\n                fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n                fontSize: 12,\n                backgroundColor: \"#f5f5f5\",\n                borderRadius: \"5px\",\n                border: \"1px solid #ddd\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSend(message.text),\n              className: \"absolute top-0 right-0 mt-2 mr-2 px-2 py-1 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\",\n              children: \"Run\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n            language: \"sql\",\n            style: materialDark,\n            className: \"rounded-md\",\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this)\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-t border-gray-200 p-4 bg-white\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          className: \"flex-1 p-2 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500 focus:ring-1 focus:ring-blue-500\",\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"Mq1X2+OJV5PzBWCkMYwOqsaLQLc=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","PrismLight","SyntaxHighlighter","sql","materialDark","format","Editor","highlight","languages","jsxDEV","_jsxDEV","registerLanguage","ChatBot","setChartData","setTableData","addOldData","_s","messages","setMessages","input","setInput","tableData","setTableDataState","handleSubmit","e","preventDefault","trim","userMessage","id","Date","now","text","isUser","botMessage","isEditable","handleEdit","newText","map","message","handleSend","setTimeout","fakeTableData","name","email","created_at","labels","row","chartData","datasets","label","data","borderColor","tension","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","value","onValueChange","code","padding","style","fontFamily","fontSize","backgroundColor","borderRadius","border","onClick","language","onSubmit","type","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/yuyangzhang/Desktop/llm-sql/frontend/src/components/ChatBot.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { PrismLight as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport sql from \"react-syntax-highlighter/dist/esm/languages/prism/sql\";\nimport { materialDark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport { format } from \"sql-formatter\";\nimport Editor from \"react-simple-code-editor\";\nimport { highlight, languages } from \"prismjs\";\nimport \"prismjs/components/prism-sql\";\nimport \"prismjs/themes/prism.css\";\n\ninterface Message {\n  id: number;\n  text: string;\n  isUser: boolean;\n  isEditable?: boolean;\n}\n\ninterface ChatBotProps {\n  setChartData: (data: any, sql: string) => void;\n  setTableData: (data: any[]) => void;\n  addOldData: (data: any, tableData: any[], sql: string) => void;\n}\n\nSyntaxHighlighter.registerLanguage(\"sql\", sql);\n\nconst ChatBot: React.FC<ChatBotProps> = ({\n  setChartData,\n  setTableData,\n  addOldData,\n}) => {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [input, setInput] = useState(\"\");\n  const [tableData, setTableDataState] = useState<any[]>([]);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!input.trim()) return;\n\n    // Add user message\n    const userMessage: Message = {\n      id: Date.now(),\n      text: input,\n      isUser: true,\n    };\n\n    // Simulate bot response with formatted SQL\n    const botMessage: Message = {\n      id: Date.now() + 1,\n      text: format(\n        `SELECT id, name, email, created_at FROM users WHERE name = '${input}' ORDER BY created_at DESC LIMIT 10;`\n      ),\n      isUser: false,\n      isEditable: true,\n    };\n\n    setMessages([...messages, userMessage, botMessage]);\n    setInput(\"\");\n  };\n\n  const handleEdit = (id: number, newText: string) => {\n    setMessages(\n      messages.map((message) =>\n        message.id === id ? { ...message, text: newText } : message\n      )\n    );\n  };\n\n  const handleSend = (sql: string) => {\n    // Simulate sending the SQL to the backend server and receiving data\n    setTimeout(() => {\n      const fakeTableData = [\n        {\n          id: 1,\n          name: \"John Doe\",\n          email: \"john.doe@example.com\",\n          created_at: \"2023-01-01T10:00:00Z\",\n        },\n        {\n          id: 2,\n          name: \"Jane Smith\",\n          email: \"jane.smith@example.com\",\n          created_at: \"2023-01-02T11:30:00Z\",\n        },\n        {\n          id: 3,\n          name: \"Alice Johnson\",\n          email: \"alice.johnson@example.com\",\n          created_at: \"2023-01-03T12:45:00Z\",\n        },\n        {\n          id: 4,\n          name: \"Bob Brown\",\n          email: \"bob.brown@example.com\",\n          created_at: \"2023-01-04T14:00:00Z\",\n        },\n        {\n          id: 5,\n          name: \"Charlie Davis\",\n          email: \"charlie.davis@example.com\",\n          created_at: \"2023-01-05T15:15:00Z\",\n        },\n        {\n          id: 6,\n          name: \"Diana Evans\",\n          email: \"diana.evans@example.com\",\n          created_at: \"2023-01-06T16:30:00Z\",\n        },\n      ];\n\n      const labels = fakeTableData.map((row) => row.name);\n      const chartData = {\n        labels,\n        datasets: [\n          {\n            label: \"User Data\",\n            data: fakeTableData.map((row) => row.id),\n            borderColor: \"rgb(75, 192, 192)\",\n            tension: 0.1,\n          },\n        ],\n      };\n\n      addOldData(chartData, fakeTableData, sql);\n      setTableDataState(fakeTableData);\n      setTableData(fakeTableData);\n      setChartData(chartData, sql);\n    }, 1000); // Simulate network delay\n\n    // Original handleSend function\n    /*\n    fetch(\"/api/execute-sql\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ sql }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Success:\", data);\n        // Update table data\n        addOldData(chartData, data.tableData, sql);\n        setTableData(data.tableData);\n\n        // Update chart data\n        const labels = data.tableData.map((row: any) => row.name);\n        const chartData = {\n          labels,\n          datasets: [\n            {\n              label: \"User Data\",\n              data: data.tableData.map((row: any) => row.id),\n              borderColor: \"rgb(75, 192, 192)\",\n              tension: 0.1,\n            },\n          ],\n        };\n        setChartData(chartData, sql);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n    */\n  };\n\n  return (\n    <div className=\"flex flex-col h-full bg-white rounded-lg shadow-lg overflow-hidden\">\n      {/* Title Bar */}\n      <div className=\"bg-blue-500 text-white p-4 text-center font-bold text-lg\">\n        ChatBot\n      </div>\n\n      {/* Chat Messages Area */}\n      <div className=\"flex-1 overflow-y-auto p-4 bg-gray-50\">\n        {messages.length === 0 ? (\n          <div className=\"text-center text-gray-500 mt-4\">\n            Start a conversation...\n          </div>\n        ) : (\n          messages.map((message) => (\n            <div\n              key={message.id}\n              className={`mb-4 ${message.isUser ? \"text-right\" : \"text-left\"}`}\n            >\n              <div\n                className={`inline-block max-w-[80%] p-3 rounded-lg ${\n                  message.isUser\n                    ? \"bg-blue-500 text-white rounded-br-none\"\n                    : \"bg-gray-200 text-gray-800 rounded-bl-none\"\n                }`}\n              >\n                {message.isUser ? (\n                  message.text\n                ) : message.isEditable ? (\n                  <div className=\"relative\">\n                    <Editor\n                      value={message.text}\n                      onValueChange={(newText) =>\n                        handleEdit(message.id, newText)\n                      }\n                      highlight={(code) =>\n                        highlight(code, languages.sql, \"sql\")\n                      }\n                      padding={10}\n                      style={{\n                        fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n                        fontSize: 12,\n                        backgroundColor: \"#f5f5f5\",\n                        borderRadius: \"5px\",\n                        border: \"1px solid #ddd\",\n                      }}\n                    />\n                    <button\n                      onClick={() => handleSend(message.text)}\n                      className=\"absolute top-0 right-0 mt-2 mr-2 px-2 py-1 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n                    >\n                      Run\n                    </button>\n                  </div>\n                ) : (\n                  <SyntaxHighlighter\n                    language=\"sql\"\n                    style={materialDark}\n                    className=\"rounded-md\"\n                  >\n                    {message.text}\n                  </SyntaxHighlighter>\n                )}\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n\n      {/* Input Area */}\n      <div className=\"border-t border-gray-200 p-4 bg-white\">\n        <form onSubmit={handleSubmit} className=\"flex gap-2\">\n          <input\n            type=\"text\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            className=\"flex-1 p-2 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500 focus:ring-1 focus:ring-blue-500\"\n            placeholder=\"Type your message...\"\n          />\n          <button\n            type=\"submit\"\n            className=\"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n          >\n            Send\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}