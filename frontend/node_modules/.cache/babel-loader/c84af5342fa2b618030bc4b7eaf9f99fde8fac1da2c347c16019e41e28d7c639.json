{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar React = __importStar(require(\"react\"));\nvar KEYCODE_Y = 89;\nvar KEYCODE_Z = 90;\nvar KEYCODE_M = 77;\nvar KEYCODE_PARENS = 57;\nvar KEYCODE_BRACKETS = 219;\nvar KEYCODE_QUOTE = 222;\nvar KEYCODE_BACK_QUOTE = 192;\nvar HISTORY_LIMIT = 100;\nvar HISTORY_TIME_GAP = 3000;\nvar isWindows = typeof window !== 'undefined' && 'navigator' in window && /Win/i.test(navigator.platform);\nvar isMacLike = typeof window !== 'undefined' && 'navigator' in window && /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\nvar className = 'npm__react-simple-code-editor__textarea';\nvar cssText = /* CSS */\"\\n/**\\n * Reset the text fill color so that placeholder is visible\\n */\\n.\".concat(className, \":empty {\\n  -webkit-text-fill-color: inherit !important;\\n}\\n\\n/**\\n * Hack to apply on some CSS on IE10 and IE11\\n */\\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\\n  /**\\n    * IE doesn't support '-webkit-text-fill-color'\\n    * So we use 'color: transparent' to make the text transparent on IE\\n    * Unlike other browsers, it doesn't affect caret color in IE\\n    */\\n  .\").concat(className, \" {\\n    color: transparent !important;\\n  }\\n\\n  .\").concat(className, \"::selection {\\n    background-color: #accef7 !important;\\n    color: transparent !important;\\n  }\\n}\\n\");\nvar Editor = React.forwardRef(function Editor(props, ref) {\n  var autoFocus = props.autoFocus,\n    disabled = props.disabled,\n    form = props.form,\n    highlight = props.highlight,\n    _a = props.ignoreTabKey,\n    ignoreTabKey = _a === void 0 ? false : _a,\n    _b = props.insertSpaces,\n    insertSpaces = _b === void 0 ? true : _b,\n    maxLength = props.maxLength,\n    minLength = props.minLength,\n    name = props.name,\n    onBlur = props.onBlur,\n    onClick = props.onClick,\n    onFocus = props.onFocus,\n    onKeyDown = props.onKeyDown,\n    onKeyUp = props.onKeyUp,\n    onValueChange = props.onValueChange,\n    _c = props.padding,\n    padding = _c === void 0 ? 0 : _c,\n    placeholder = props.placeholder,\n    preClassName = props.preClassName,\n    readOnly = props.readOnly,\n    required = props.required,\n    style = props.style,\n    _d = props.tabSize,\n    tabSize = _d === void 0 ? 2 : _d,\n    textareaClassName = props.textareaClassName,\n    textareaId = props.textareaId,\n    value = props.value,\n    rest = __rest(props, [\"autoFocus\", \"disabled\", \"form\", \"highlight\", \"ignoreTabKey\", \"insertSpaces\", \"maxLength\", \"minLength\", \"name\", \"onBlur\", \"onClick\", \"onFocus\", \"onKeyDown\", \"onKeyUp\", \"onValueChange\", \"padding\", \"placeholder\", \"preClassName\", \"readOnly\", \"required\", \"style\", \"tabSize\", \"textareaClassName\", \"textareaId\", \"value\"]);\n  var historyRef = React.useRef({\n    stack: [],\n    offset: -1\n  });\n  var inputRef = React.useRef(null);\n  var _e = React.useState(true),\n    capture = _e[0],\n    setCapture = _e[1];\n  var contentStyle = {\n    paddingTop: typeof padding === 'object' ? padding.top : padding,\n    paddingRight: typeof padding === 'object' ? padding.right : padding,\n    paddingBottom: typeof padding === 'object' ? padding.bottom : padding,\n    paddingLeft: typeof padding === 'object' ? padding.left : padding\n  };\n  var highlighted = highlight(value);\n  var getLines = function (text, position) {\n    return text.substring(0, position).split('\\n');\n  };\n  var recordChange = React.useCallback(function (record, overwrite) {\n    var _a, _b, _c;\n    if (overwrite === void 0) {\n      overwrite = false;\n    }\n    var _d = historyRef.current,\n      stack = _d.stack,\n      offset = _d.offset;\n    if (stack.length && offset > -1) {\n      // When something updates, drop the redo operations\n      historyRef.current.stack = stack.slice(0, offset + 1);\n      // Limit the number of operations to 100\n      var count = historyRef.current.stack.length;\n      if (count > HISTORY_LIMIT) {\n        var extras = count - HISTORY_LIMIT;\n        historyRef.current.stack = stack.slice(extras, count);\n        historyRef.current.offset = Math.max(historyRef.current.offset - extras, 0);\n      }\n    }\n    var timestamp = Date.now();\n    if (overwrite) {\n      var last = historyRef.current.stack[historyRef.current.offset];\n      if (last && timestamp - last.timestamp < HISTORY_TIME_GAP) {\n        // A previous entry exists and was in short interval\n        // Match the last word in the line\n        var re = /[^a-z0-9]([a-z0-9]+)$/i;\n        // Get the previous line\n        var previous = (_a = getLines(last.value, last.selectionStart).pop()) === null || _a === void 0 ? void 0 : _a.match(re);\n        // Get the current line\n        var current = (_b = getLines(record.value, record.selectionStart).pop()) === null || _b === void 0 ? void 0 : _b.match(re);\n        if ((previous === null || previous === void 0 ? void 0 : previous[1]) && ((_c = current === null || current === void 0 ? void 0 : current[1]) === null || _c === void 0 ? void 0 : _c.startsWith(previous[1]))) {\n          // The last word of the previous line and current line match\n          // Overwrite previous entry so that undo will remove whole word\n          historyRef.current.stack[historyRef.current.offset] = __assign(__assign({}, record), {\n            timestamp: timestamp\n          });\n          return;\n        }\n      }\n    }\n    // Add the new operation to the stack\n    historyRef.current.stack.push(__assign(__assign({}, record), {\n      timestamp: timestamp\n    }));\n    historyRef.current.offset++;\n  }, []);\n  var recordCurrentState = React.useCallback(function () {\n    var input = inputRef.current;\n    if (!input) return;\n    // Save current state of the input\n    var value = input.value,\n      selectionStart = input.selectionStart,\n      selectionEnd = input.selectionEnd;\n    recordChange({\n      value: value,\n      selectionStart: selectionStart,\n      selectionEnd: selectionEnd\n    });\n  }, [recordChange]);\n  var updateInput = function (record) {\n    var input = inputRef.current;\n    if (!input) return;\n    // Update values and selection state\n    input.value = record.value;\n    input.selectionStart = record.selectionStart;\n    input.selectionEnd = record.selectionEnd;\n    onValueChange === null || onValueChange === void 0 ? void 0 : onValueChange(record.value);\n  };\n  var applyEdits = function (record) {\n    // Save last selection state\n    var input = inputRef.current;\n    var last = historyRef.current.stack[historyRef.current.offset];\n    if (last && input) {\n      historyRef.current.stack[historyRef.current.offset] = __assign(__assign({}, last), {\n        selectionStart: input.selectionStart,\n        selectionEnd: input.selectionEnd\n      });\n    }\n    // Save the changes\n    recordChange(record);\n    updateInput(record);\n  };\n  var undoEdit = function () {\n    var _a = historyRef.current,\n      stack = _a.stack,\n      offset = _a.offset;\n    // Get the previous edit\n    var record = stack[offset - 1];\n    if (record) {\n      // Apply the changes and update the offset\n      updateInput(record);\n      historyRef.current.offset = Math.max(offset - 1, 0);\n    }\n  };\n  var redoEdit = function () {\n    var _a = historyRef.current,\n      stack = _a.stack,\n      offset = _a.offset;\n    // Get the next edit\n    var record = stack[offset + 1];\n    if (record) {\n      // Apply the changes and update the offset\n      updateInput(record);\n      historyRef.current.offset = Math.min(offset + 1, stack.length - 1);\n    }\n  };\n  var handleKeyDown = function (e) {\n    if (onKeyDown) {\n      onKeyDown(e);\n      if (e.defaultPrevented) {\n        return;\n      }\n    }\n    if (e.key === 'Escape') {\n      e.currentTarget.blur();\n    }\n    var _a = e.currentTarget,\n      value = _a.value,\n      selectionStart = _a.selectionStart,\n      selectionEnd = _a.selectionEnd;\n    var tabCharacter = (insertSpaces ? ' ' : '\\t').repeat(tabSize);\n    if (e.key === 'Tab' && !ignoreTabKey && capture) {\n      // Prevent focus change\n      e.preventDefault();\n      if (e.shiftKey) {\n        // Unindent selected lines\n        var linesBeforeCaret = getLines(value, selectionStart);\n        var startLine_1 = linesBeforeCaret.length - 1;\n        var endLine_1 = getLines(value, selectionEnd).length - 1;\n        var nextValue = value.split('\\n').map(function (line, i) {\n          if (i >= startLine_1 && i <= endLine_1 && line.startsWith(tabCharacter)) {\n            return line.substring(tabCharacter.length);\n          }\n          return line;\n        }).join('\\n');\n        if (value !== nextValue) {\n          var startLineText = linesBeforeCaret[startLine_1];\n          applyEdits({\n            value: nextValue,\n            // Move the start cursor if first line in selection was modified\n            // It was modified only if it started with a tab\n            selectionStart: (startLineText === null || startLineText === void 0 ? void 0 : startLineText.startsWith(tabCharacter)) ? selectionStart - tabCharacter.length : selectionStart,\n            // Move the end cursor by total number of characters removed\n            selectionEnd: selectionEnd - (value.length - nextValue.length)\n          });\n        }\n      } else if (selectionStart !== selectionEnd) {\n        // Indent selected lines\n        var linesBeforeCaret = getLines(value, selectionStart);\n        var startLine_2 = linesBeforeCaret.length - 1;\n        var endLine_2 = getLines(value, selectionEnd).length - 1;\n        var startLineText = linesBeforeCaret[startLine_2];\n        applyEdits({\n          value: value.split('\\n').map(function (line, i) {\n            if (i >= startLine_2 && i <= endLine_2) {\n              return tabCharacter + line;\n            }\n            return line;\n          }).join('\\n'),\n          // Move the start cursor by number of characters added in first line of selection\n          // Don't move it if it there was no text before cursor\n          selectionStart: startLineText && /\\S/.test(startLineText) ? selectionStart + tabCharacter.length : selectionStart,\n          // Move the end cursor by total number of characters added\n          selectionEnd: selectionEnd + tabCharacter.length * (endLine_2 - startLine_2 + 1)\n        });\n      } else {\n        var updatedSelection = selectionStart + tabCharacter.length;\n        applyEdits({\n          // Insert tab character at caret\n          value: value.substring(0, selectionStart) + tabCharacter + value.substring(selectionEnd),\n          // Update caret position\n          selectionStart: updatedSelection,\n          selectionEnd: updatedSelection\n        });\n      }\n    } else if (e.key === 'Backspace') {\n      var hasSelection = selectionStart !== selectionEnd;\n      var textBeforeCaret = value.substring(0, selectionStart);\n      if (textBeforeCaret.endsWith(tabCharacter) && !hasSelection) {\n        // Prevent default delete behaviour\n        e.preventDefault();\n        var updatedSelection = selectionStart - tabCharacter.length;\n        applyEdits({\n          // Remove tab character at caret\n          value: value.substring(0, selectionStart - tabCharacter.length) + value.substring(selectionEnd),\n          // Update caret position\n          selectionStart: updatedSelection,\n          selectionEnd: updatedSelection\n        });\n      }\n    } else if (e.key === 'Enter') {\n      // Ignore selections\n      if (selectionStart === selectionEnd) {\n        // Get the current line\n        var line = getLines(value, selectionStart).pop();\n        var matches = line === null || line === void 0 ? void 0 : line.match(/^\\s+/);\n        if (matches === null || matches === void 0 ? void 0 : matches[0]) {\n          e.preventDefault();\n          // Preserve indentation on inserting a new line\n          var indent = '\\n' + matches[0];\n          var updatedSelection = selectionStart + indent.length;\n          applyEdits({\n            // Insert indentation character at caret\n            value: value.substring(0, selectionStart) + indent + value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: updatedSelection,\n            selectionEnd: updatedSelection\n          });\n        }\n      }\n    } else if (e.keyCode === KEYCODE_PARENS || e.keyCode === KEYCODE_BRACKETS || e.keyCode === KEYCODE_QUOTE || e.keyCode === KEYCODE_BACK_QUOTE) {\n      var chars = void 0;\n      if (e.keyCode === KEYCODE_PARENS && e.shiftKey) {\n        chars = ['(', ')'];\n      } else if (e.keyCode === KEYCODE_BRACKETS) {\n        if (e.shiftKey) {\n          chars = ['{', '}'];\n        } else {\n          chars = ['[', ']'];\n        }\n      } else if (e.keyCode === KEYCODE_QUOTE) {\n        if (e.shiftKey) {\n          chars = ['\"', '\"'];\n        } else {\n          chars = [\"'\", \"'\"];\n        }\n      } else if (e.keyCode === KEYCODE_BACK_QUOTE && !e.shiftKey) {\n        chars = ['`', '`'];\n      }\n      // If text is selected, wrap them in the characters\n      if (selectionStart !== selectionEnd && chars) {\n        e.preventDefault();\n        applyEdits({\n          value: value.substring(0, selectionStart) + chars[0] + value.substring(selectionStart, selectionEnd) + chars[1] + value.substring(selectionEnd),\n          // Update caret position\n          selectionStart: selectionStart,\n          selectionEnd: selectionEnd + 2\n        });\n      }\n    } else if ((isMacLike ?\n    // Trigger undo with ⌘+Z on Mac\n    e.metaKey && e.keyCode === KEYCODE_Z :\n    // Trigger undo with Ctrl+Z on other platforms\n    e.ctrlKey && e.keyCode === KEYCODE_Z) && !e.shiftKey && !e.altKey) {\n      e.preventDefault();\n      undoEdit();\n    } else if ((isMacLike ?\n    // Trigger redo with ⌘+Shift+Z on Mac\n    e.metaKey && e.keyCode === KEYCODE_Z && e.shiftKey : isWindows ?\n    // Trigger redo with Ctrl+Y on Windows\n    e.ctrlKey && e.keyCode === KEYCODE_Y :\n    // Trigger redo with Ctrl+Shift+Z on other platforms\n    e.ctrlKey && e.keyCode === KEYCODE_Z && e.shiftKey) && !e.altKey) {\n      e.preventDefault();\n      redoEdit();\n    } else if (e.keyCode === KEYCODE_M && e.ctrlKey && (isMacLike ? e.shiftKey : true)) {\n      e.preventDefault();\n      // Toggle capturing tab key so users can focus away\n      setCapture(function (prev) {\n        return !prev;\n      });\n    }\n  };\n  var handleChange = function (e) {\n    var _a = e.currentTarget,\n      value = _a.value,\n      selectionStart = _a.selectionStart,\n      selectionEnd = _a.selectionEnd;\n    recordChange({\n      value: value,\n      selectionStart: selectionStart,\n      selectionEnd: selectionEnd\n    }, true);\n    onValueChange(value);\n  };\n  React.useEffect(function () {\n    recordCurrentState();\n  }, [recordCurrentState]);\n  React.useImperativeHandle(ref, function () {\n    return {\n      get session() {\n        return {\n          history: historyRef.current\n        };\n      },\n      set session(session) {\n        historyRef.current = session.history;\n      }\n    };\n  }, []);\n  return React.createElement(\"div\", __assign({}, rest, {\n    style: __assign(__assign({}, styles.container), style)\n  }), React.createElement(\"pre\", __assign({\n    className: preClassName,\n    \"aria-hidden\": \"true\",\n    style: __assign(__assign(__assign({}, styles.editor), styles.highlight), contentStyle)\n  }, typeof highlighted === 'string' ? {\n    dangerouslySetInnerHTML: {\n      __html: highlighted + '<br />'\n    }\n  } : {\n    children: highlighted\n  })), React.createElement(\"textarea\", {\n    ref: function (c) {\n      return inputRef.current = c;\n    },\n    style: __assign(__assign(__assign({}, styles.editor), styles.textarea), contentStyle),\n    className: className + (textareaClassName ? \" \".concat(textareaClassName) : ''),\n    id: textareaId,\n    value: value,\n    onChange: handleChange,\n    onKeyDown: handleKeyDown,\n    onClick: onClick,\n    onKeyUp: onKeyUp,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    disabled: disabled,\n    form: form,\n    maxLength: maxLength,\n    minLength: minLength,\n    name: name,\n    placeholder: placeholder,\n    readOnly: readOnly,\n    required: required,\n    autoFocus: autoFocus,\n    autoCapitalize: \"off\",\n    autoComplete: \"off\",\n    autoCorrect: \"off\",\n    spellCheck: false,\n    \"data-gramm\": false\n  }), React.createElement(\"style\", {\n    dangerouslySetInnerHTML: {\n      __html: cssText\n    }\n  }));\n});\nvar styles = {\n  container: {\n    position: 'relative',\n    textAlign: 'left',\n    boxSizing: 'border-box',\n    padding: 0,\n    overflow: 'hidden'\n  },\n  textarea: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: '100%',\n    width: '100%',\n    resize: 'none',\n    color: 'inherit',\n    overflow: 'hidden',\n    MozOsxFontSmoothing: 'grayscale',\n    WebkitFontSmoothing: 'antialiased',\n    WebkitTextFillColor: 'transparent'\n  },\n  highlight: {\n    position: 'relative',\n    pointerEvents: 'none'\n  },\n  editor: {\n    margin: 0,\n    border: 0,\n    background: 'none',\n    boxSizing: 'inherit',\n    display: 'inherit',\n    fontFamily: 'inherit',\n    fontSize: 'inherit',\n    fontStyle: 'inherit',\n    fontVariantLigatures: 'inherit',\n    fontWeight: 'inherit',\n    letterSpacing: 'inherit',\n    lineHeight: 'inherit',\n    tabSize: 'inherit',\n    textIndent: 'inherit',\n    textRendering: 'inherit',\n    textTransform: 'inherit',\n    whiteSpace: 'pre-wrap',\n    wordBreak: 'keep-all',\n    overflowWrap: 'break-word'\n  }\n};\nexports.default = Editor;","map":{"version":3,"names":["React","__importStar","require","KEYCODE_Y","KEYCODE_Z","KEYCODE_M","KEYCODE_PARENS","KEYCODE_BRACKETS","KEYCODE_QUOTE","KEYCODE_BACK_QUOTE","HISTORY_LIMIT","HISTORY_TIME_GAP","isWindows","window","test","navigator","platform","isMacLike","className","cssText","concat","Editor","forwardRef","props","ref","autoFocus","disabled","form","highlight","_a","ignoreTabKey","_b","insertSpaces","maxLength","minLength","name","onBlur","onClick","onFocus","onKeyDown","onKeyUp","onValueChange","_c","padding","placeholder","preClassName","readOnly","required","style","_d","tabSize","textareaClassName","textareaId","value","rest","__rest","historyRef","useRef","stack","offset","inputRef","_e","useState","capture","setCapture","contentStyle","paddingTop","top","paddingRight","right","paddingBottom","bottom","paddingLeft","left","highlighted","getLines","text","position","substring","split","recordChange","useCallback","record","overwrite","current","length","slice","count","extras","Math","max","timestamp","Date","now","last","re","previous","selectionStart","pop","match","startsWith","__assign","push","recordCurrentState","input","selectionEnd","updateInput","applyEdits","undoEdit","redoEdit","min","handleKeyDown","e","defaultPrevented","key","currentTarget","blur","tabCharacter","repeat","preventDefault","shiftKey","linesBeforeCaret","startLine_1","endLine_1","nextValue","map","line","i","join","startLineText","startLine_2","endLine_2","updatedSelection","hasSelection","textBeforeCaret","endsWith","matches","indent","keyCode","chars","metaKey","ctrlKey","altKey","prev","handleChange","useEffect","useImperativeHandle","session","history","createElement","styles","container","editor","dangerouslySetInnerHTML","__html","children","c","textarea","id","onChange","autoCapitalize","autoComplete","autoCorrect","spellCheck","textAlign","boxSizing","overflow","height","width","resize","color","MozOsxFontSmoothing","WebkitFontSmoothing","WebkitTextFillColor","pointerEvents","margin","border","background","display","fontFamily","fontSize","fontStyle","fontVariantLigatures","fontWeight","letterSpacing","lineHeight","textIndent","textRendering","textTransform","whiteSpace","wordBreak","overflowWrap","exports","default"],"sources":["/Users/yuyangzhang/Desktop/llm-sql/frontend/node_modules/react-simple-code-editor/src/index.tsx"],"sourcesContent":["import * as React from 'react';\n\ntype Padding<T> = T | { top?: T; right?: T; bottom?: T; left?: T };\n\ntype Props = React.HTMLAttributes<HTMLDivElement> & {\n  // Props for the component\n  highlight: (value: string) => string | React.ReactNode;\n  ignoreTabKey?: boolean;\n  insertSpaces?: boolean;\n  onValueChange: (value: string) => void;\n  padding?: Padding<number | string>;\n  style?: React.CSSProperties;\n  tabSize?: number;\n  value: string;\n\n  // Props for the textarea\n  autoFocus?: boolean;\n  disabled?: boolean;\n  form?: string;\n  maxLength?: number;\n  minLength?: number;\n  name?: string;\n  onBlur?: React.FocusEventHandler<HTMLTextAreaElement>;\n  onClick?: React.MouseEventHandler<HTMLTextAreaElement>;\n  onFocus?: React.FocusEventHandler<HTMLTextAreaElement>;\n  onKeyDown?: React.KeyboardEventHandler<HTMLTextAreaElement>;\n  onKeyUp?: React.KeyboardEventHandler<HTMLTextAreaElement>;\n  placeholder?: string;\n  readOnly?: boolean;\n  required?: boolean;\n  textareaClassName?: string;\n  textareaId?: string;\n\n  // Props for the hightlighted code’s pre element\n  preClassName?: string;\n};\n\ntype Record = {\n  value: string;\n  selectionStart: number;\n  selectionEnd: number;\n};\n\ntype History = {\n  stack: (Record & { timestamp: number })[];\n  offset: number;\n};\n\nconst KEYCODE_Y = 89;\nconst KEYCODE_Z = 90;\nconst KEYCODE_M = 77;\nconst KEYCODE_PARENS = 57;\nconst KEYCODE_BRACKETS = 219;\nconst KEYCODE_QUOTE = 222;\nconst KEYCODE_BACK_QUOTE = 192;\n\nconst HISTORY_LIMIT = 100;\nconst HISTORY_TIME_GAP = 3000;\n\nconst isWindows =\n  typeof window !== 'undefined' &&\n  'navigator' in window &&\n  /Win/i.test(navigator.platform);\nconst isMacLike =\n  typeof window !== 'undefined' &&\n  'navigator' in window &&\n  /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n\nconst className = 'npm__react-simple-code-editor__textarea';\n\nconst cssText = /* CSS */ `\n/**\n * Reset the text fill color so that placeholder is visible\n */\n.${className}:empty {\n  -webkit-text-fill-color: inherit !important;\n}\n\n/**\n * Hack to apply on some CSS on IE10 and IE11\n */\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  /**\n    * IE doesn't support '-webkit-text-fill-color'\n    * So we use 'color: transparent' to make the text transparent on IE\n    * Unlike other browsers, it doesn't affect caret color in IE\n    */\n  .${className} {\n    color: transparent !important;\n  }\n\n  .${className}::selection {\n    background-color: #accef7 !important;\n    color: transparent !important;\n  }\n}\n`;\n\nconst Editor = React.forwardRef(function Editor(\n  props: Props,\n  ref: React.Ref<null | { session: { history: History } }>\n) {\n  const {\n    autoFocus,\n    disabled,\n    form,\n    highlight,\n    ignoreTabKey = false,\n    insertSpaces = true,\n    maxLength,\n    minLength,\n    name,\n    onBlur,\n    onClick,\n    onFocus,\n    onKeyDown,\n    onKeyUp,\n    onValueChange,\n    padding = 0,\n    placeholder,\n    preClassName,\n    readOnly,\n    required,\n    style,\n    tabSize = 2,\n    textareaClassName,\n    textareaId,\n    value,\n    ...rest\n  } = props;\n\n  const historyRef = React.useRef<History>({\n    stack: [],\n    offset: -1,\n  });\n  const inputRef = React.useRef<HTMLTextAreaElement | null>(null);\n  const [capture, setCapture] = React.useState(true);\n  const contentStyle = {\n    paddingTop: typeof padding === 'object' ? padding.top : padding,\n    paddingRight: typeof padding === 'object' ? padding.right : padding,\n    paddingBottom: typeof padding === 'object' ? padding.bottom : padding,\n    paddingLeft: typeof padding === 'object' ? padding.left : padding,\n  };\n  const highlighted = highlight(value);\n\n  const getLines = (text: string, position: number) =>\n    text.substring(0, position).split('\\n');\n\n  const recordChange = React.useCallback(\n    (record: Record, overwrite: boolean = false) => {\n      const { stack, offset } = historyRef.current;\n\n      if (stack.length && offset > -1) {\n        // When something updates, drop the redo operations\n        historyRef.current.stack = stack.slice(0, offset + 1);\n\n        // Limit the number of operations to 100\n        const count = historyRef.current.stack.length;\n\n        if (count > HISTORY_LIMIT) {\n          const extras = count - HISTORY_LIMIT;\n\n          historyRef.current.stack = stack.slice(extras, count);\n          historyRef.current.offset = Math.max(\n            historyRef.current.offset - extras,\n            0\n          );\n        }\n      }\n\n      const timestamp = Date.now();\n\n      if (overwrite) {\n        const last = historyRef.current.stack[historyRef.current.offset];\n\n        if (last && timestamp - last.timestamp < HISTORY_TIME_GAP) {\n          // A previous entry exists and was in short interval\n\n          // Match the last word in the line\n          const re = /[^a-z0-9]([a-z0-9]+)$/i;\n\n          // Get the previous line\n          const previous = getLines(last.value, last.selectionStart)\n            .pop()\n            ?.match(re);\n\n          // Get the current line\n          const current = getLines(record.value, record.selectionStart)\n            .pop()\n            ?.match(re);\n\n          if (previous?.[1] && current?.[1]?.startsWith(previous[1])) {\n            // The last word of the previous line and current line match\n            // Overwrite previous entry so that undo will remove whole word\n            historyRef.current.stack[historyRef.current.offset] = {\n              ...record,\n              timestamp,\n            };\n\n            return;\n          }\n        }\n      }\n\n      // Add the new operation to the stack\n      historyRef.current.stack.push({ ...record, timestamp });\n      historyRef.current.offset++;\n    },\n    []\n  );\n\n  const recordCurrentState = React.useCallback(() => {\n    const input = inputRef.current;\n\n    if (!input) return;\n\n    // Save current state of the input\n    const { value, selectionStart, selectionEnd } = input;\n\n    recordChange({\n      value,\n      selectionStart,\n      selectionEnd,\n    });\n  }, [recordChange]);\n\n  const updateInput = (record: Record) => {\n    const input = inputRef.current;\n\n    if (!input) return;\n\n    // Update values and selection state\n    input.value = record.value;\n    input.selectionStart = record.selectionStart;\n    input.selectionEnd = record.selectionEnd;\n\n    onValueChange?.(record.value);\n  };\n\n  const applyEdits = (record: Record) => {\n    // Save last selection state\n    const input = inputRef.current;\n    const last = historyRef.current.stack[historyRef.current.offset];\n\n    if (last && input) {\n      historyRef.current.stack[historyRef.current.offset] = {\n        ...last,\n        selectionStart: input.selectionStart,\n        selectionEnd: input.selectionEnd,\n      };\n    }\n\n    // Save the changes\n    recordChange(record);\n    updateInput(record);\n  };\n\n  const undoEdit = () => {\n    const { stack, offset } = historyRef.current;\n\n    // Get the previous edit\n    const record = stack[offset - 1];\n\n    if (record) {\n      // Apply the changes and update the offset\n      updateInput(record);\n      historyRef.current.offset = Math.max(offset - 1, 0);\n    }\n  };\n\n  const redoEdit = () => {\n    const { stack, offset } = historyRef.current;\n\n    // Get the next edit\n    const record = stack[offset + 1];\n\n    if (record) {\n      // Apply the changes and update the offset\n      updateInput(record);\n      historyRef.current.offset = Math.min(offset + 1, stack.length - 1);\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (onKeyDown) {\n      onKeyDown(e);\n\n      if (e.defaultPrevented) {\n        return;\n      }\n    }\n\n    if (e.key === 'Escape') {\n      e.currentTarget.blur();\n    }\n\n    const { value, selectionStart, selectionEnd } = e.currentTarget;\n\n    const tabCharacter = (insertSpaces ? ' ' : '\\t').repeat(tabSize);\n\n    if (e.key === 'Tab' && !ignoreTabKey && capture) {\n      // Prevent focus change\n      e.preventDefault();\n\n      if (e.shiftKey) {\n        // Unindent selected lines\n        const linesBeforeCaret = getLines(value, selectionStart);\n        const startLine = linesBeforeCaret.length - 1;\n        const endLine = getLines(value, selectionEnd).length - 1;\n        const nextValue = value\n          .split('\\n')\n          .map((line, i) => {\n            if (\n              i >= startLine &&\n              i <= endLine &&\n              line.startsWith(tabCharacter)\n            ) {\n              return line.substring(tabCharacter.length);\n            }\n\n            return line;\n          })\n          .join('\\n');\n\n        if (value !== nextValue) {\n          const startLineText = linesBeforeCaret[startLine];\n\n          applyEdits({\n            value: nextValue,\n            // Move the start cursor if first line in selection was modified\n            // It was modified only if it started with a tab\n            selectionStart: startLineText?.startsWith(tabCharacter)\n              ? selectionStart - tabCharacter.length\n              : selectionStart,\n            // Move the end cursor by total number of characters removed\n            selectionEnd: selectionEnd - (value.length - nextValue.length),\n          });\n        }\n      } else if (selectionStart !== selectionEnd) {\n        // Indent selected lines\n        const linesBeforeCaret = getLines(value, selectionStart);\n        const startLine = linesBeforeCaret.length - 1;\n        const endLine = getLines(value, selectionEnd).length - 1;\n        const startLineText = linesBeforeCaret[startLine];\n\n        applyEdits({\n          value: value\n            .split('\\n')\n            .map((line, i) => {\n              if (i >= startLine && i <= endLine) {\n                return tabCharacter + line;\n              }\n\n              return line;\n            })\n            .join('\\n'),\n          // Move the start cursor by number of characters added in first line of selection\n          // Don't move it if it there was no text before cursor\n          selectionStart:\n            startLineText && /\\S/.test(startLineText)\n              ? selectionStart + tabCharacter.length\n              : selectionStart,\n          // Move the end cursor by total number of characters added\n          selectionEnd:\n            selectionEnd + tabCharacter.length * (endLine - startLine + 1),\n        });\n      } else {\n        const updatedSelection = selectionStart + tabCharacter.length;\n\n        applyEdits({\n          // Insert tab character at caret\n          value:\n            value.substring(0, selectionStart) +\n            tabCharacter +\n            value.substring(selectionEnd),\n          // Update caret position\n          selectionStart: updatedSelection,\n          selectionEnd: updatedSelection,\n        });\n      }\n    } else if (e.key === 'Backspace') {\n      const hasSelection = selectionStart !== selectionEnd;\n      const textBeforeCaret = value.substring(0, selectionStart);\n\n      if (textBeforeCaret.endsWith(tabCharacter) && !hasSelection) {\n        // Prevent default delete behaviour\n        e.preventDefault();\n\n        const updatedSelection = selectionStart - tabCharacter.length;\n\n        applyEdits({\n          // Remove tab character at caret\n          value:\n            value.substring(0, selectionStart - tabCharacter.length) +\n            value.substring(selectionEnd),\n          // Update caret position\n          selectionStart: updatedSelection,\n          selectionEnd: updatedSelection,\n        });\n      }\n    } else if (e.key === 'Enter') {\n      // Ignore selections\n      if (selectionStart === selectionEnd) {\n        // Get the current line\n        const line = getLines(value, selectionStart).pop();\n        const matches = line?.match(/^\\s+/);\n\n        if (matches?.[0]) {\n          e.preventDefault();\n\n          // Preserve indentation on inserting a new line\n          const indent = '\\n' + matches[0];\n          const updatedSelection = selectionStart + indent.length;\n\n          applyEdits({\n            // Insert indentation character at caret\n            value:\n              value.substring(0, selectionStart) +\n              indent +\n              value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: updatedSelection,\n            selectionEnd: updatedSelection,\n          });\n        }\n      }\n    } else if (\n      e.keyCode === KEYCODE_PARENS ||\n      e.keyCode === KEYCODE_BRACKETS ||\n      e.keyCode === KEYCODE_QUOTE ||\n      e.keyCode === KEYCODE_BACK_QUOTE\n    ) {\n      let chars;\n\n      if (e.keyCode === KEYCODE_PARENS && e.shiftKey) {\n        chars = ['(', ')'];\n      } else if (e.keyCode === KEYCODE_BRACKETS) {\n        if (e.shiftKey) {\n          chars = ['{', '}'];\n        } else {\n          chars = ['[', ']'];\n        }\n      } else if (e.keyCode === KEYCODE_QUOTE) {\n        if (e.shiftKey) {\n          chars = ['\"', '\"'];\n        } else {\n          chars = [\"'\", \"'\"];\n        }\n      } else if (e.keyCode === KEYCODE_BACK_QUOTE && !e.shiftKey) {\n        chars = ['`', '`'];\n      }\n\n      // If text is selected, wrap them in the characters\n      if (selectionStart !== selectionEnd && chars) {\n        e.preventDefault();\n\n        applyEdits({\n          value:\n            value.substring(0, selectionStart) +\n            chars[0] +\n            value.substring(selectionStart, selectionEnd) +\n            chars[1] +\n            value.substring(selectionEnd),\n          // Update caret position\n          selectionStart,\n          selectionEnd: selectionEnd + 2,\n        });\n      }\n    } else if (\n      (isMacLike\n        ? // Trigger undo with ⌘+Z on Mac\n          e.metaKey && e.keyCode === KEYCODE_Z\n        : // Trigger undo with Ctrl+Z on other platforms\n          e.ctrlKey && e.keyCode === KEYCODE_Z) &&\n      !e.shiftKey &&\n      !e.altKey\n    ) {\n      e.preventDefault();\n\n      undoEdit();\n    } else if (\n      (isMacLike\n        ? // Trigger redo with ⌘+Shift+Z on Mac\n          e.metaKey && e.keyCode === KEYCODE_Z && e.shiftKey\n        : isWindows\n        ? // Trigger redo with Ctrl+Y on Windows\n          e.ctrlKey && e.keyCode === KEYCODE_Y\n        : // Trigger redo with Ctrl+Shift+Z on other platforms\n          e.ctrlKey && e.keyCode === KEYCODE_Z && e.shiftKey) &&\n      !e.altKey\n    ) {\n      e.preventDefault();\n\n      redoEdit();\n    } else if (\n      e.keyCode === KEYCODE_M &&\n      e.ctrlKey &&\n      (isMacLike ? e.shiftKey : true)\n    ) {\n      e.preventDefault();\n\n      // Toggle capturing tab key so users can focus away\n      setCapture((prev) => !prev);\n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const { value, selectionStart, selectionEnd } = e.currentTarget;\n\n    recordChange(\n      {\n        value,\n        selectionStart,\n        selectionEnd,\n      },\n      true\n    );\n\n    onValueChange(value);\n  };\n\n  React.useEffect(() => {\n    recordCurrentState();\n  }, [recordCurrentState]);\n\n  React.useImperativeHandle(\n    ref,\n    () => {\n      return {\n        get session() {\n          return {\n            history: historyRef.current,\n          };\n        },\n        set session(session: { history: History }) {\n          historyRef.current = session.history;\n        },\n      };\n    },\n    []\n  );\n\n  return (\n    <div {...rest} style={{ ...styles.container, ...style }}>\n      <pre\n        className={preClassName}\n        aria-hidden=\"true\"\n        style={{ ...styles.editor, ...styles.highlight, ...contentStyle }}\n        {...(typeof highlighted === 'string'\n          ? { dangerouslySetInnerHTML: { __html: highlighted + '<br />' } }\n          : { children: highlighted })}\n      />\n      <textarea\n        ref={(c) => (inputRef.current = c)}\n        style={{\n          ...styles.editor,\n          ...styles.textarea,\n          ...contentStyle,\n        }}\n        className={\n          className + (textareaClassName ? ` ${textareaClassName}` : '')\n        }\n        id={textareaId}\n        value={value}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        onClick={onClick}\n        onKeyUp={onKeyUp}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        disabled={disabled}\n        form={form}\n        maxLength={maxLength}\n        minLength={minLength}\n        name={name}\n        placeholder={placeholder}\n        readOnly={readOnly}\n        required={required}\n        autoFocus={autoFocus}\n        autoCapitalize=\"off\"\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        spellCheck={false}\n        data-gramm={false}\n      />\n      {/* eslint-disable-next-line react/no-danger */}\n      <style dangerouslySetInnerHTML={{ __html: cssText }} />\n    </div>\n  );\n});\n\nconst styles = {\n  container: {\n    position: 'relative',\n    textAlign: 'left',\n    boxSizing: 'border-box',\n    padding: 0,\n    overflow: 'hidden',\n  },\n  textarea: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: '100%',\n    width: '100%',\n    resize: 'none',\n    color: 'inherit',\n    overflow: 'hidden',\n    MozOsxFontSmoothing: 'grayscale',\n    WebkitFontSmoothing: 'antialiased',\n    WebkitTextFillColor: 'transparent',\n  },\n  highlight: {\n    position: 'relative',\n    pointerEvents: 'none',\n  },\n  editor: {\n    margin: 0,\n    border: 0,\n    background: 'none',\n    boxSizing: 'inherit',\n    display: 'inherit',\n    fontFamily: 'inherit',\n    fontSize: 'inherit',\n    fontStyle: 'inherit',\n    fontVariantLigatures: 'inherit',\n    fontWeight: 'inherit',\n    letterSpacing: 'inherit',\n    lineHeight: 'inherit',\n    tabSize: 'inherit',\n    textIndent: 'inherit',\n    textRendering: 'inherit',\n    textTransform: 'inherit',\n    whiteSpace: 'pre-wrap',\n    wordBreak: 'keep-all',\n    overflowWrap: 'break-word',\n  },\n} as const;\n\nexport default Editor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}