{"ast":null,"code":"var _jsxFileName = \"/Users/yuyangzhang/Desktop/llm-sql/src/components/ChatBot.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { PrismLight as SyntaxHighlighter } from \"react-syntax-highlighter\";\n// import { PrismLight as SyntaxHighlighter } from \"react-syntax-highlighter/dist/esm/prism-light\";\nimport sql from \"react-syntax-highlighter/dist/esm/languages/prism/sql\";\nimport { materialDark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport { format } from \"sql-formatter\";\nimport Editor from \"react-simple-code-editor\";\nimport { highlight, languages } from \"prismjs\";\nimport \"prismjs/components/prism-sql\";\nimport \"prismjs/themes/prism.css\";\nimport Chart from \"./Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSyntaxHighlighter.registerLanguage(\"sql\", sql);\nconst ChatBot = ({\n  setChartData\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n\n    // Add user message\n    const userMessage = {\n      id: Date.now(),\n      text: input,\n      isUser: true\n    };\n\n    // Simulate bot response with formatted SQL\n    const botMessage = {\n      id: Date.now() + 1,\n      text: format(`SELECT id, name, email, created_at FROM users WHERE name = '${input}' ORDER BY created_at DESC LIMIT 10;`),\n      isUser: false,\n      isEditable: true\n    };\n    setMessages([...messages, userMessage, botMessage]);\n    setInput(\"\");\n  };\n  const handleEdit = (id, newText) => {\n    setMessages(messages.map(message => message.id === id ? {\n      ...message,\n      text: newText\n    } : message));\n  };\n  const handleSend = sql => {\n    // Send the SQL to the backend server\n    fetch(\"/api/execute-sql\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        sql\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(\"Success:\", data);\n      setChartData(data.chartData); // Assuming the backend returns chartData\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full bg-white rounded-lg shadow-lg overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-blue-500 text-white p-4 text-center font-bold text-lg\",\n      children: \"ChatBot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto p-4 bg-gray-50\",\n      children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-500 mt-4\",\n        children: \"Start a conversation...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this) : messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-4 ${message.isUser ? \"text-right\" : \"text-left\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `inline-block max-w-[80%] p-3 rounded-lg ${message.isUser ? \"bg-blue-500 text-white rounded-br-none\" : \"bg-gray-200 text-gray-800 rounded-bl-none\"}`,\n          children: message.isUser ? message.text : message.isEditable ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: [/*#__PURE__*/_jsxDEV(Editor, {\n              value: message.text,\n              onValueChange: newText => handleEdit(message.id, newText),\n              highlight: code => highlight(code, languages.sql, \"sql\"),\n              padding: 10,\n              style: {\n                fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n                fontSize: 12,\n                backgroundColor: \"#f5f5f5\",\n                borderRadius: \"5px\",\n                border: \"1px solid #ddd\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSend(message.text),\n              className: \"absolute top-0 right-0 mt-2 mr-2 px-2 py-1 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\",\n              children: \"Run\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n            language: \"sql\",\n            style: materialDark,\n            className: \"rounded-md\",\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), chartData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4\",\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-t border-gray-200 p-4 bg-white\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          className: \"flex-1 p-2 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500 focus:ring-1 focus:ring-blue-500\",\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","PrismLight","SyntaxHighlighter","sql","materialDark","format","Editor","highlight","languages","Chart","jsxDEV","_jsxDEV","registerLanguage","ChatBot","setChartData","_s","messages","setMessages","input","setInput","handleSubmit","e","preventDefault","trim","userMessage","id","Date","now","text","isUser","botMessage","isEditable","handleEdit","newText","map","message","handleSend","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","chartData","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","value","onValueChange","code","padding","style","fontFamily","fontSize","backgroundColor","borderRadius","border","onClick","language","onSubmit","type","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/yuyangzhang/Desktop/llm-sql/src/components/ChatBot.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { PrismLight as SyntaxHighlighter } from \"react-syntax-highlighter\";\n// import { PrismLight as SyntaxHighlighter } from \"react-syntax-highlighter/dist/esm/prism-light\";\nimport sql from \"react-syntax-highlighter/dist/esm/languages/prism/sql\";\nimport { materialDark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport { format } from \"sql-formatter\";\nimport Editor from \"react-simple-code-editor\";\nimport { highlight, languages } from \"prismjs\";\nimport \"prismjs/components/prism-sql\";\nimport \"prismjs/themes/prism.css\";\nimport Chart from \"./Chart\";\n\ninterface Message {\n  id: number;\n  text: string;\n  isUser: boolean;\n  isEditable?: boolean;\n}\n\ninterface ChatBotProps {\n  setChartData: (data: any) => void;\n}\n\nSyntaxHighlighter.registerLanguage(\"sql\", sql);\n\nconst ChatBot: React.FC<ChatBotProps> = ({ setChartData }) => {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [input, setInput] = useState(\"\");\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!input.trim()) return;\n\n    // Add user message\n    const userMessage: Message = {\n      id: Date.now(),\n      text: input,\n      isUser: true,\n    };\n\n    // Simulate bot response with formatted SQL\n    const botMessage: Message = {\n      id: Date.now() + 1,\n      text: format(\n        `SELECT id, name, email, created_at FROM users WHERE name = '${input}' ORDER BY created_at DESC LIMIT 10;`\n      ),\n      isUser: false,\n      isEditable: true,\n    };\n\n    setMessages([...messages, userMessage, botMessage]);\n    setInput(\"\");\n  };\n\n  const handleEdit = (id: number, newText: string) => {\n    setMessages(\n      messages.map((message) =>\n        message.id === id ? { ...message, text: newText } : message\n      )\n    );\n  };\n\n  const handleSend = (sql: string) => {\n    // Send the SQL to the backend server\n    fetch(\"/api/execute-sql\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ sql }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Success:\", data);\n        setChartData(data.chartData); // Assuming the backend returns chartData\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  };\n\n  return (\n    <div className=\"flex flex-col h-full bg-white rounded-lg shadow-lg overflow-hidden\">\n      {/* Title Bar */}\n      <div className=\"bg-blue-500 text-white p-4 text-center font-bold text-lg\">\n        ChatBot\n      </div>\n\n      {/* Chat Messages Area */}\n      <div className=\"flex-1 overflow-y-auto p-4 bg-gray-50\">\n        {messages.length === 0 ? (\n          <div className=\"text-center text-gray-500 mt-4\">\n            Start a conversation...\n          </div>\n        ) : (\n          messages.map((message) => (\n            <div\n              key={message.id}\n              className={`mb-4 ${message.isUser ? \"text-right\" : \"text-left\"}`}\n            >\n              <div\n                className={`inline-block max-w-[80%] p-3 rounded-lg ${\n                  message.isUser\n                    ? \"bg-blue-500 text-white rounded-br-none\"\n                    : \"bg-gray-200 text-gray-800 rounded-bl-none\"\n                }`}\n              >\n                {message.isUser ? (\n                  message.text\n                ) : message.isEditable ? (\n                  <div className=\"relative\">\n                    <Editor\n                      value={message.text}\n                      onValueChange={(newText) =>\n                        handleEdit(message.id, newText)\n                      }\n                      highlight={(code) =>\n                        highlight(code, languages.sql, \"sql\")\n                      }\n                      padding={10}\n                      style={{\n                        fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n                        fontSize: 12,\n                        backgroundColor: \"#f5f5f5\",\n                        borderRadius: \"5px\",\n                        border: \"1px solid #ddd\",\n                      }}\n                    />\n                    <button\n                      onClick={() => handleSend(message.text)}\n                      className=\"absolute top-0 right-0 mt-2 mr-2 px-2 py-1 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n                    >\n                      Run\n                    </button>\n                  </div>\n                ) : (\n                  <SyntaxHighlighter\n                    language=\"sql\"\n                    style={materialDark}\n                    className=\"rounded-md\"\n                  >\n                    {message.text}\n                  </SyntaxHighlighter>\n                )}\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n\n      {/* Chart Area */}\n      {chartData && (\n        <div className=\"p-4\">\n          <Chart data={chartData} />\n        </div>\n      )}\n\n      {/* Input Area */}\n      <div className=\"border-t border-gray-200 p-4 bg-white\">\n        <form onSubmit={handleSubmit} className=\"flex gap-2\">\n          <input\n            type=\"text\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            className=\"flex-1 p-2 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500 focus:ring-1 focus:ring-blue-500\"\n            placeholder=\"Type your message...\"\n          />\n          <button\n            type=\"submit\"\n            className=\"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n          >\n            Send\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}